import asyncio
import logging
import os
from aiohttp import web
from dotenv import load_dotenv # –≠—Ç–æ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Cloud Run, –Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.webhook.aiohttp_server import setup_application

# =========================================================
# –í–ù–ò–ú–ê–ù–ò–ï: –≠–¢–û–¢ –ö–û–î –ü–†–ï–î–°–¢–ê–í–õ–Ø–ï–¢ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–£–Æ –ê–†–•–ò–¢–ï–ö–¢–£–†–£.
# –û–ù –ù–ï –°–û–í–ú–ï–°–¢–ò–ú –° –í–ê–®–ò–ú –û–°–ù–û–í–ù–´–ú –ü–†–û–ï–ö–¢–û–ú –ë–ï–ó –ü–û–õ–ù–û–ô –ü–ï–†–ï–°–¢–†–û–ô–ö–ò.
# –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –ï–ì–û –¢–û–õ–¨–ö–û –ï–°–õ–ò –í–´ –•–û–¢–ò–¢–ï –ü–û–õ–ù–û–°–¢–¨–Æ –ò–ó–ú–ï–ù–ò–¢–¨ –°–¢–†–£–ö–¢–£–†–£.
# =========================================================

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –í–ù–ò–ú–ê–ù–ò–ï: load_dotenv() –ù–ï –ù–£–ñ–ù–ê –í CLOUD RUN.
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ Cloud Run –Ω–∞–ø—Ä—è–º—É—é.
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ .env (–∏–ª–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Cloud Run)
PORT = int(os.getenv("PORT", 8080))
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH", "/webhook")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "") # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å URL –≤–∞—à–µ–≥–æ Render/Cloud Run —Å–µ—Ä–≤–∏—Å–∞
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN") # –ò—Å–ø–æ–ª—å–∑—É–µ–º TELEGRAM_BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN, default=ParseMode.HTML)
dp = Dispatcher() # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'dp' –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, —ç—Ç–æ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–æ

# =========================================================
# –ü–õ–ï–ô–°–•–û–õ–î–ï–†–´ –î–õ–Ø –í–ê–®–ò–• –•–ï–ù–î–õ–ï–†–û–í
# –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —ç—Ç–æ –±—ã–ª–∏ –±—ã –∏–º–ø–æ—Ä—Ç—ã –∏–∑ handlers/*.py
# –∏ –∏—Ö —Ä–æ—É—Ç–µ—Ä—ã –±—ã–ª–∏ –±—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ dp.
# =========================================================

# –ü—Ä–∏–º–µ—Ä —Ö–µ–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
@dp.message(types.Command(commands=["start"])) # <-- –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º 'dp' –Ω–∞–ø—Ä—è–º—É—é
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç (–∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã).")

# –§—É–Ω–∫—Ü–∏—è setup_handlers —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∞,
# –µ—Å–ª–∏ –≤—ã –≤–∫–ª—é—á–∞–µ—Ç–µ –¥—Ä—É–≥–∏–µ —Ä–æ—É—Ç–µ—Ä—ã –≤ 'dp' –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å.
# –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏ —Å —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏:
# from handlers.some_module import router as some_router
# dp.include_router(some_router)


async def on_startup(app: web.Application):
    logger.info("üîÅ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞...")
    # –ó–¥–µ—Å—å –º—ã –≤–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä.
    # –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ, –ø–æ—Å–∫–æ–ª—å–∫—É cmd_start —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ dp,
    # –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å include_router(dp).
    # –ï—Å–ª–∏ –±—ã —É –≤–∞—Å –±—ã–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã, –≤—ã –±—ã –∏—Ö –∑–¥–µ—Å—å –≤–∫–ª—é—á–∞–ª–∏:
    # dp.include_router(your_another_router)
    
    # Aiogram 3 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ .start() –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Polling –∏–ª–∏ Webhook-—Å–µ—Ä–≤–µ—Ä–∞
    # –ù–æ –ø–æ—Å–∫–æ–ª—å–∫—É –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º aiohttp –∏ setup_application,
    # webhook —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ.
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
    await app["bot"].set_webhook(WEBHOOK_URL + WEBHOOK_PATH)
    logger.info("‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

async def on_shutdown(app: web.Application):
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    await app["bot"].session.close()

def main():
    app = web.Application()
    
    # setup_application —Å–≤—è–∑—ã–≤–∞–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å aiohttp –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    setup_application(app, dp, bot=bot, path=WEBHOOK_PATH) # –ü–µ—Ä–µ–¥–∞–µ–º 'dp' –∫–∞–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    
    # –î–æ–±–∞–≤–ª—è–µ–º bot –∏ dispatcher –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ on_startup/on_shutdown
    app["bot"] = bot
    app["dispatcher"] = dp # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –ø–æ–¥ –∫–ª—é—á–æ–º "dispatcher"

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    logger.info(f"üåê –ó–∞–ø—É—Å–∫ aiohttp —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    web.run_app(app, host="0.0.0.0", port=PORT, print=None)

if __name__ == "__main__":
    main()
