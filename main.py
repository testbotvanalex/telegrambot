import asyncio
import logging
import os
from aiohttp import web
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types # –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –¥–ª—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
from aiogram.enums import ParseMode # –î–ª—è DefaultBotProperties
from aiogram.webhook.aiohttp_server import setup_application # –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞

# =========================================================
# –í–ù–ò–ú–ê–ù–ò–ï: –≠–¢–û–¢ –ö–û–î –ü–†–ï–î–°–¢–ê–í–õ–Ø–ï–¢ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–£–Æ –ê–†–•–ò–¢–ï–ö–¢–£–†–£.
# –û–ù –ù–ï –°–û–í–ú–ï–°–¢–ò–ú –° –í–ê–®–ò–ú –û–°–ù–û–í–ù–´–ú –ü–†–û–ï–ö–¢–û–ú –ë–ï–ó –ü–û–õ–ù–û–ô –ü–ï–†–ï–°–¢–†–û–ô–ö–ò.
# –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –ï–ì–û –¢–û–õ–¨–ö–û –ï–°–õ–ò –í–´ –•–û–¢–ò–¢–ï –ü–û–õ–ù–û–°–¢–¨–Æ –ò–ó–ú–ï–ù–ò–¢–¨ –°–¢–†–£–ö–¢–£–†–£.
# =========================================================

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑.env
PORT = int(os.getenv("PORT", 8080))
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH", "/webhook")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "") # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å URL –≤–∞—à–µ–≥–æ Render/Cloud Run —Å–µ—Ä–≤–∏—Å–∞
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN") # –ò—Å–ø–æ–ª—å–∑—É–µ–º TELEGRAM_BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
# –í —ç—Ç–æ–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, bot_app –±—É–¥–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º Dispatcher
bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
bot_app = Dispatcher() # bot_app —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º

# =========================================================
# –ü–õ–ï–ô–°–•–û–õ–î–ï–†–´ –î–õ–Ø –í–ê–®–ò–• –•–ï–ù–î–õ–ï–†–û–í
# –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —ç—Ç–æ –±—ã–ª–∏ –±—ã –∏–º–ø–æ—Ä—Ç—ã –∏–∑ handlers/*.py
# –∏ –∏—Ö —Ä–æ—É—Ç–µ—Ä—ã –±—ã–ª–∏ –±—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ bot_app.
# =========================================================

# –ü—Ä–∏–º–µ—Ä —Ö–µ–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
@bot_app.message(types.Command(commands=["start"]))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç (–∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã).")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ (–≤ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ)
def setup_handlers(dispatcher_instance: Dispatcher):
    # –ó–¥–µ—Å—å –≤—ã –±—ã –≤–∫–ª—é—á–∞–ª–∏ –≤—Å–µ –≤–∞—à–∏ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ –ø–∞–ø–∫–∏ handlers
    # –ù–∞–ø—Ä–∏–º–µ—Ä:
    # from handlers.store_registration import router as store_registration_router
    # dispatcher_instance.include_router(store_registration_router)
    # –ò —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–ª—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤.
    # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –º—ã –ø—Ä–æ—Å—Ç–æ –≤–∫–ª—é—á–∞–µ–º —Å–∞–º bot_app, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç cmd_start
    dispatcher_instance.include_router(bot_app)
    logger.info("–•–µ–Ω–¥–ª–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")


async def on_startup(app: web.Application):
    logger.info("üîÅ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞...")
    # setup_handlers(app["dp"]) # app["dp"] –±—É–¥–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ bot_app (–¥–∏—Å–ø–µ—Ç—á–µ—Ä) –∏ bot (—ç–∫–∑–µ–º–ø–ª—è—Ä Bot) –¥–æ—Å—Ç—É–ø–Ω—ã
    setup_handlers(app["dispatcher"]) # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    await app["bot"].set_webhook(WEBHOOK_URL + WEBHOOK_PATH)
    logger.info("‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

async def on_shutdown(app: web.Application):
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    await app["bot"].session.close()

# –≠—Ç–æ—Ç handle_webhook –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ setup_application –µ–≥–æ —Å–æ–∑–¥–∞–µ—Ç
# async def handle_webhook(request: web.Request):
#     update_data = await request.json()
#     await bot_app.feed_update(bot_app.bot, update_data)
#     return web.Response()

def main():
    app = web.Application()
    
    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ setup_application –∏–∑ aiogram
    # –≠—Ç–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç /webhook –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    setup_application(app, bot_app, bot=bot, path=WEBHOOK_PATH) # –ü–µ—Ä–µ–¥–∞–µ–º bot_app –∫–∞–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    
    # –î–æ–±–∞–≤–ª—è–µ–º bot –∏ dispatcher –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ on_startup/on_shutdown
    app["bot"] = bot
    app["dispatcher"] = bot_app # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –ø–æ–¥ –∫–ª—é—á–æ–º "dispatcher"

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    logger.info(f"üåê –ó–∞–ø—É—Å–∫ aiohttp —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    web.run_app(app, host="0.0.0.0", port=PORT, print=None)

if __name__ == "__main__":
    main()
