from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
from db.db import get_approved_stores
import asyncio
from aiogram.enums import ParseMode # –î–ª—è ParseMode.HTML

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ù–ï –Ø–í–õ–Ø–ï–¢–°–Ø —Ä–æ—É—Ç–µ—Ä–æ–º, –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ part_request.py
async def broadcast_request_to_stores(bot: Bot, data: dict):
    requester_id = data["store_id"]
    approved_stores = await get_approved_stores()
    if not approved_stores:
        print("DEBUG_BROADCAST: No approved stores to broadcast to.")
        return

    text = (
        f"üÜï <b>Nouvelle demande de pi√®ce</b>\n\n"
        f"üì¶ <b>Pi√®ce:</b> {data['part_name']}\n"
        f"üöó <b>V√©hicule:</b> {data['car']}\n"
        f"üî¢ <b>Quantit√©:</b> {data['quantite']}"
    )
    if data.get('vin_code'):
        text += f"\nüßæ <b>VIN:</b> {data['vin_code']}"

    reply_markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì¶ J‚Äôai cette pi√®ce", callback_data=f"offer:have:{data['id']}"),
            InlineKeyboardButton(text="üïí Je la re√ßois bient√¥t", callback_data=f"offer:soon:{data['id']}"),
            InlineKeyboardButton(text="‚ùå Je ne l‚Äôai pas", callback_data=f"offer:none:{data['id']}")
        ]
    ])

    tasks = []
    for store in approved_stores:
        if store["telegram_id"] == requester_id:
            continue # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Ç–æ–º—É, –∫—Ç–æ –µ–≥–æ —Å–æ–∑–¥–∞–ª
        
        try:
            if data.get("photo_file_id"):
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                tasks.append(
                    bot.send_photo(
                        chat_id=store["telegram_id"],
                        photo=data["photo_file_id"],
                        caption=text,
                        reply_markup=reply_markup,
                        parse_mode=ParseMode.HTML
                    )
                )
            else:
                # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                tasks.append(
                    bot.send_message(
                        chat_id=store["telegram_id"],
                        text=text,
                        reply_markup=reply_markup,
                        parse_mode=ParseMode.HTML
                    )
                )
        except Exception as e:
            print(f"‚ùå Erreur en envoyant le broadcast √† {store['telegram_id']}: {e}")

    if tasks:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        await asyncio.gather(*tasks, return_exceptions=True)
    print("‚úÖ Broadcast termin√©.")
# Note: Cette fonction broadcast_request_to_stores est utilis√©e –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω—ã.